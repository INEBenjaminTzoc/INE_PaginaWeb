---
import type IHeader from "../interfaces/header.interface";
import { PUBLIC_STRAPI_URL } from "../lib/config";
import fetchApi from "../lib/strapi";
import Container from "./container.astro";
import { Astronav, MenuIcon, MenuItems } from "astro-navbar";
import Dropdown from "./navbar/dropdown.astro";
import NavMenu from "./navbar/nav-menu";
import { defaultHeaderData } from "@/lib/default";

let headerData: IHeader = defaultHeaderData;

try {
  headerData = await fetchApi<IHeader>({
    endpoint: 'header?fields[0]=id&populate[Logotipo][populate][icono_institucion][fields][0]=mime&populate[Logotipo][populate][icono_institucion][fields][1]=url&populate[Menu][populate]=*',
    wrappedByKey: 'data',
  });
} catch (error) {
  console.error("Error al obtener datos del header: ", error);
}
---
<div id="primary-header" class="w-full sticky top-0 z-[1001] py-0.5 bg-transparent">
  <Container>
    <header class="flex flex-col lg:flex-row justify-between items-center my-5">
      <Astronav>
        <div class="flex w-full lg:w-auto items-center justify-between">
          <a href="/" class="w-full flex items-center cursor-pointer">
            <div class="h-15 aspect-square">
              <picture>
                <img src=`${PUBLIC_STRAPI_URL}${headerData.Logotipo?.icono_institucion.url}` alt="INE" width="100" height="100" loading="lazy" />
              </picture>
            </div>
            <h2 class="w-full sm:max-w-72 px-3 text-[#004F9E]! font-semibold text-xl text-center sm:text-left">
              {headerData.Logotipo?.nombre_institucion}
            </h2>
          </a>
          <div class="block lg:hidden">
            <MenuIcon class="w-6 h-6 text-gray-800" />
          </div>
        </div>
        <NavMenu menuItems={headerData.Menu} client:only />
        <MenuItems class="hidden w-full mt-2">
          <ul class="flex flex-col lg:flex-row lg:gap-3">
            {
              headerData.Menu.map((item, index) => (
                <>
                  {item.children && (
                    <Dropdown
                      title={item.title}
                      children={item.children}
                      lastItem={index === headerData.Menu.length - 1}
                    />
                  )}
  
                  {!item.children && (
                    <li>
                      <a
                        href={item.path}
                        class="flex lg:px-3 py-2 items-center text-gray-600 hover:text-gray-900">
                        <span> {item.title}</span>
                        {item.badge && (
                          <span class="ml-1 px-2 py-0.5 text-[10px] animate-pulse font-semibold uppercase text-white bg-indigo-600 rounded-full">
                            {item.badge}
                          </span>
                        )}
                      </a>
                    </li>
                  )}
                </>
              ))
            }
          </ul>
        </MenuItems>
      </Astronav>
    </header>
  </Container>
</div>

<script>
  const primaryHeader = document.getElementById('primary-header');
  const scrollWatcher = document.createElement('div');

  scrollWatcher.setAttribute('data-scroll-watcher', '');
  primaryHeader?.before(scrollWatcher);

  const navObserver = new IntersectionObserver((entries) => {
    primaryHeader?.classList.toggle('sticking', !entries[0].isIntersecting);
  });

  navObserver.observe(scrollWatcher);
</script>
